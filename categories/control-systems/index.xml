<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Control Systems on Jesús Vargas Portfolio</title><link>https://jmvargascruz.github.io/categories/control-systems/</link><description>Recent content in Control Systems on Jesús Vargas Portfolio</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Mon, 01 Jan 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://jmvargascruz.github.io/categories/control-systems/index.xml" rel="self" type="application/rss+xml"/><item><title>Low-Level Control System | KUKA iDo Robot</title><link>https://jmvargascruz.github.io/projects/low-level-control/</link><pubDate>Mon, 01 Jan 2024 00:00:00 +0000</pubDate><guid>https://jmvargascruz.github.io/projects/low-level-control/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>This project corresponds to the development of the low-level control system for the KUKA iDo robot. The system is based on a custom PCB and embedded firmware running on a Raspberry Pi Pico W. It is responsible for real-time motor control, sensor acquisition, and communication with the high-level ROS 2 system via micro-ROS.&lt;/p>
&lt;p>The firmware was developed in C++ using the official Pico SDK. All logic is executed within a centralized class that integrates control loops, sensor processing, and communication tasks.&lt;/p></description></item></channel></rss>