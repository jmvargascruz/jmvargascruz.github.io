<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Projects on Jesús Vargas Portfolio</title><link>https://jmvargascruz.github.io/projects/</link><description>Recent content in Projects on Jesús Vargas Portfolio</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Mon, 01 Apr 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://jmvargascruz.github.io/projects/index.xml" rel="self" type="application/rss+xml"/><item><title>Tower of Hanoi Solver | Industrial Robotics</title><link>https://jmvargascruz.github.io/projects/hanoi-tower/</link><pubDate>Mon, 01 Apr 2024 00:00:00 +0000</pubDate><guid>https://jmvargascruz.github.io/projects/hanoi-tower/</guid><description>&lt;h2 id="industrial-robotics--tower-of-hanoi-solver">Industrial Robotics – Tower of Hanoi Solver&lt;/h2>
&lt;p>Developed a Python-based inverse kinematics solution for a UR10e industrial robot to solve the classic Tower of Hanoi problem.&lt;/p>
&lt;p>&lt;strong>Project Overview&lt;/strong>&lt;/p>
&lt;p>• Implemented custom inverse kinematics in Python for precise pose calculation.&lt;br>
• Designed and executed a sequence of 7 movements to solve a 3-disc Tower of Hanoi.&lt;br>
• Controlled the UR10e through an interface between Python and the robot controller.&lt;br>
• Achieved high precision: relative error under 0.1% in all poses.&lt;/p></description></item><item><title>Aerodynamic Analysis of GOE398 Airfoil | Ansys Fluent</title><link>https://jmvargascruz.github.io/projects/cfd-analysis/</link><pubDate>Mon, 01 Jan 2024 00:00:00 +0000</pubDate><guid>https://jmvargascruz.github.io/projects/cfd-analysis/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>This project consists of a computational fluid dynamics (CFD) analysis of the GOE398 airfoil using Ansys Fluent. The objective was to evaluate the airfoil’s aerodynamic behavior at various angles of attack under steady-state conditions. The study includes pressure and velocity fields, as well as lift and drag coefficient.&lt;/p>
&lt;p>The results were included in a presentation at the XVII Ansys Convergence Mexico 2020, focused on basic aerodynamic analysis.&lt;/p>
&lt;h2 id="methodology">Methodology&lt;/h2>
&lt;ul>
&lt;li>The airfoil profile was modeled in 2D.&lt;/li>
&lt;li>Simulations were performed for angles of attack between 0° and 20°.&lt;/li>
&lt;li>A structured mesh was generated and refined near the boundary layer.&lt;/li>
&lt;/ul>
&lt;h2 id="analysis-parameters">Analysis Parameters&lt;/h2>
&lt;ul>
&lt;li>Pressure coefficient distribution&lt;/li>
&lt;li>Velocity magnitude and streamlines&lt;/li>
&lt;li>Lift and drag coefficient estimation&lt;/li>
&lt;li>Stall onset and boundary layer behavior&lt;/li>
&lt;/ul>
&lt;h2 id="tools-and-technologies">Tools and Technologies&lt;/h2>
&lt;ul>
&lt;li>&lt;strong>Simulation:&lt;/strong> Ansys Fluent&lt;/li>
&lt;/ul></description></item><item><title>Automated Conveyor | Siemens S1200 PLC</title><link>https://jmvargascruz.github.io/projects/automated-conveyor/</link><pubDate>Mon, 01 Jan 2024 00:00:00 +0000</pubDate><guid>https://jmvargascruz.github.io/projects/automated-conveyor/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>This project consists of an automated conveyor system programmed in ladder logic using Siemens TIA Portal. The system handles item inspection, grouping, and packaging. It is designed to reject metallic contaminants, count valid items, and seal them into bags as part of a defined automation cycle.&lt;/p>
&lt;h2 id="system-behavior">System Behavior&lt;/h2>
&lt;ul>
&lt;li>A start button activates the conveyor.&lt;/li>
&lt;li>Items are placed on the belt at a fixed rate of 1 per second.&lt;/li>
&lt;li>A metal sensor checks each item:
&lt;ul>
&lt;li>If metal is detected, a pneumatic actuator ejects it.&lt;/li>
&lt;li>Non-metallic items continue and are counted.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>After five valid items are collected:
&lt;ul>
&lt;li>A heat-sealing actuator seals the bag.&lt;/li>
&lt;li>A second actuator ejects the sealed bag and triggers a sound alert.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>The system pauses until a new bag is placed and the resume button is pressed.&lt;/li>
&lt;li>After three bags are sealed, the system stops automatically.&lt;/li>
&lt;/ul>
&lt;h2 id="tools-and-technologies">Tools and Technologies&lt;/h2>
&lt;ul>
&lt;li>&lt;strong>Software:&lt;/strong> TIA Portal, Siemens Ladder Logic&lt;/li>
&lt;li>&lt;strong>PLC:&lt;/strong> Siemens S7-1200 PLC (simulated)&lt;/li>
&lt;li>&lt;strong>Actuators:&lt;/strong> Pneumatic actuators, heat sealer&lt;/li>
&lt;li>&lt;strong>Sensors:&lt;/strong> Inductive proximity sensor for metal detection&lt;/li>
&lt;/ul>
&lt;h2 id="video">Video&lt;/h2>
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
&lt;iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share; fullscreen" loading="eager" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/bgzaS4JFpUc?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" title="YouTube video">&lt;/iframe>
&lt;/div></description></item><item><title>Autonomous Mobile Vehicle</title><link>https://jmvargascruz.github.io/projects/amr/</link><pubDate>Mon, 01 Jan 2024 00:00:00 +0000</pubDate><guid>https://jmvargascruz.github.io/projects/amr/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>We developed an Autonomous Mobile Vehicle using a combination of Jetson Xavier for high-level processing, RPLIDAR A3 for mapping and localization, and an Arduino Mega for low-level actuation. Our team designed and implemented the electrical system, control interfaces, CAD mounts, and ROS integration. The AGV successfully navigated autonomously within the mapped area of CIMA using ROS, Hector SLAM, and TEB Local Planner.&lt;/p>
&lt;h2 id="project-highlights">Project Highlights:&lt;/h2>
&lt;ul>
&lt;li>Designed and fabricated a reinforced electrical wiring system&lt;/li>
&lt;li>Integrated voltage converters (48V to 12V, 12V to 5V, 12V to 19V) for safe and efficient power management.&lt;/li>
&lt;li>Replaced the steering motor with a 24V scooter motor and sprocket system, integrating a potentiometer for angular feedback.&lt;/li>
&lt;li>Mounted the RPLIDAR on a custom laser-cut platform aligned with the vehicle’s center.&lt;/li>
&lt;li>Installed Jetson Xavier with secure custom mount and configured ROS-based autonomous navigation.&lt;/li>
&lt;li>Generated a live map of the CIMA building and planned paths using Hector SLAM and TEB Planner.&lt;/li>
&lt;li>Programmed mode switching between autonomous and manual via RC control&lt;/li>
&lt;li>Developed and deployed Python ROS nodes to communicate velocity commands using ROS Serial&lt;/li>
&lt;/ul>
&lt;h2 id="technologies-and-tools-used">Technologies and Tools Used&lt;/h2>
&lt;ul>
&lt;li>Hardware: Jetson Xavier, Arduino Mega, RPLIDAR A3, DC motors, step-down converters, relays.&lt;/li>
&lt;li>Software: ROS, RViz, Hector SLAM, TEB Planner, Python, GIMP, SolidWorks&lt;/li>
&lt;/ul>
&lt;h2 id="gallery">Gallery&lt;/h2>
&lt;div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 10px;">
&lt;img src="images/agv.png" alt="AMR">
&lt;img src="images/map.png" alt="map">
&lt;img src="images/grid.png" alt="grid
">
&lt;/div></description></item><item><title>CAD | Welding Robot ARM</title><link>https://jmvargascruz.github.io/projects/welding-robot-arm/</link><pubDate>Mon, 01 Jan 2024 00:00:00 +0000</pubDate><guid>https://jmvargascruz.github.io/projects/welding-robot-arm/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>This project was developed as part of a Computer-Aided Design (CAD) course and involved the conceptual design of a robotic arm for welding applications. Using Siemens NX, the model explores joint articulation, link dimensions, and basic structural layout. The purpose was to apply CAD principles and practice 3D modeling of mechanical assemblies, without aiming for a fully functional or industrial-grade design.&lt;/p>
&lt;h2 id="key-features">Key Features&lt;/h2>
&lt;ul>
&lt;li>Conceptual robotic arm with articulated joints&lt;/li>
&lt;li>Simplified end-effector interface for welding simulation&lt;/li>
&lt;li>Modular design for assembly illustration&lt;/li>
&lt;li>Exploded and assembled views modeled in NX&lt;/li>
&lt;/ul>
&lt;h2 id="technologies-used">Technologies Used&lt;/h2>
&lt;ul>
&lt;li>Siemens NX (Part modeling, assemblies, exploded views)&lt;/li>
&lt;li>Basic engineering drawing generation for components&lt;/li>
&lt;/ul>
&lt;h2 id="gallery">Gallery&lt;/h2>
&lt;div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 10px;">
&lt;img src="images/3.png" alt="Welding Arm CAD View">
&lt;img src="images/6.jpg" alt="Welding Arm Assembly View">
&lt;/div></description></item><item><title>Cloud Surfer 2022 | Aerodesign</title><link>https://jmvargascruz.github.io/projects/cloud-surfer-aerodesign/</link><pubDate>Mon, 01 Jan 2024 00:00:00 +0000</pubDate><guid>https://jmvargascruz.github.io/projects/cloud-surfer-aerodesign/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>Cloud Surfer 2022 was a radio-controlled cargo aircraft developed as part of the SAE Aerodesign Mexico competition. The project focused on aerodynamic optimization, structural feasibility, and payload integration within competition constraints.&lt;/p>
&lt;h2 id="tools-and-technologies">Tools and Technologies&lt;/h2>
&lt;ul>
&lt;li>SolidWorks for 3D modeling&lt;/li>
&lt;li>Ansys Fluent for CFD simulation&lt;/li>
&lt;li>XFLR5 for preliminary aerodynamic analysis&lt;/li>
&lt;li>MATLAB for performance estimation&lt;/li>
&lt;/ul>
&lt;h2 id="gallery">Gallery&lt;/h2>
&lt;div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 10px;">
&lt;!-- &lt;img src="images/top.png" alt="Top View">
&lt;img src="images/angled.png" alt="Angled View">
&lt;img src="images/final.png" alt="Final Assembly">
&lt;img src="images/pcb.png" alt="PCB Layout">
&lt;img src="images/module.png" alt="Module">
&lt;img src="images/pcb_design_1.png" alt="PCB">
&lt;img src="images/module2.png" alt="module">
&lt;img src="images/pcb_design_2.png" alt="PCB 2">
&lt;img src="images/module_N.png" alt="module_N"> -->
&lt;/div></description></item><item><title>DC Variable Power Source</title><link>https://jmvargascruz.github.io/projects/dc-power-source/</link><pubDate>Mon, 01 Jan 2024 00:00:00 +0000</pubDate><guid>https://jmvargascruz.github.io/projects/dc-power-source/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>This project consists of the design and implementation of a variable DC power supply. The system provides an output voltage ranging from 0 V to 20 V. The circuit was simulated in Proteus, fabricated on a custom PCB.&lt;/p>
&lt;ul>
&lt;li>Variable voltage output: 0 V to 20 V&lt;/li>
&lt;li>LM317 regulator&lt;/li>
&lt;li>Full-wave bridge rectifier and smoothing capacitors&lt;/li>
&lt;li>Manual adjustment via potentiometer&lt;/li>
&lt;li>Integrated voltmeter display&lt;/li>
&lt;li>Validated output stability under varying load conditions&lt;/li>
&lt;/ul>
&lt;h2 id="tools-and-components">Tools and Components&lt;/h2>
&lt;ul>
&lt;li>Simulation: Proteus&lt;/li>
&lt;li>Fabrication: PCBWay&lt;/li>
&lt;/ul>
&lt;h2 id="gallery">Gallery&lt;/h2>
&lt;div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); gap: 10px;">
&lt;img src="images/1.png" alt="1">
&lt;img src="images/4.png" alt="4">
&lt;img src="images/5.png" alt="5">
&lt;/div></description></item><item><title>DIY Gas Forge with Hard Fire Brick</title><link>https://jmvargascruz.github.io/projects/diy-forge/</link><pubDate>Mon, 01 Jan 2024 00:00:00 +0000</pubDate><guid>https://jmvargascruz.github.io/projects/diy-forge/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>This project consisted of building a gas-powered forge. The structure was made using hard fire bricks inside a steel shell. Heat is provided by a propane torch connected to a steel pipe acting as an atmospheric burner inlet. The burner operates without forced air, relying on natural air intake to sustain combustion.&lt;/p>
&lt;p>The front of the forge includes a fire brick door that can be manually lifted to insert or remove metal parts.&lt;/p></description></item><item><title>Electric Scooter | Mechatronic Design Project</title><link>https://jmvargascruz.github.io/projects/electric-scooter/</link><pubDate>Mon, 01 Jan 2024 00:00:00 +0000</pubDate><guid>https://jmvargascruz.github.io/projects/electric-scooter/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>This project focused on the design and development of an electric scooter as part of a mechatronic design course. The process followed a complete engineering methodology including user needs analysis, system architecture, mechanical and electronic design, simulation, and manufacturability evaluation.&lt;/p>
&lt;p>The project integrated CAD modeling, structural analysis, circuit design, and simulations to create a functional and realistic design tailored for urban and off-road use.&lt;/p>
&lt;h2 id="design-methodology">Design Methodology&lt;/h2>
&lt;ul>
&lt;li>&lt;strong>User-Centered Design&lt;/strong>: Needs analysis using surveys and translation of requirements via QFD and House of Quality&lt;/li>
&lt;li>&lt;strong>System Modeling&lt;/strong>: Functional decomposition, black-box representation, and system flow diagrams&lt;/li>
&lt;li>&lt;strong>Concept Evaluation&lt;/strong>: Morphological matrix for idea generation and Pugh chart for selection&lt;/li>
&lt;li>&lt;strong>Mechanical Structure&lt;/strong>: Modular frame based on aluminum extrusions, foldable design with reinforced hinges&lt;/li>
&lt;li>&lt;strong>Electrical System&lt;/strong>: Simulated in Proteus, including throttle control, MOSFET-based driver, and LCD feedback display&lt;/li>
&lt;li>&lt;strong>Simulation and Validation&lt;/strong>:
&lt;ul>
&lt;li>Static structural FEA (Von Mises, displacement)&lt;/li>
&lt;li>Modal analysis to identify natural frequencies (69.5 Hz to 325.5 Hz)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Manufacturing Plan&lt;/strong>: Designed for low-cost fabrication using conventional tools, avoiding CNC dependence&lt;/li>
&lt;/ul>
&lt;h2 id="key-features">Key Features&lt;/h2>
&lt;ul>
&lt;li>Max speed over 25 km/h&lt;/li>
&lt;li>Modular structure using aluminum profiles&lt;/li>
&lt;li>Foldable mechanism for easy storage&lt;/li>
&lt;li>Display for battery level and speed feedback&lt;/li>
&lt;li>Off-road capable wheels&lt;/li>
&lt;li>Manual and electronic braking systems&lt;/li>
&lt;li>Cost-effective design (estimated under $12,000 MXN)&lt;/li>
&lt;/ul>
&lt;h2 id="technologies-used">Technologies Used&lt;/h2>
&lt;ul>
&lt;li>SolidWorks for 3D modeling and assembly&lt;/li>
&lt;li>FEA simulation&lt;/li>
&lt;li>Proteus for circuit simulation&lt;/li>
&lt;li>Arduino for speed control and display interface&lt;/li>
&lt;li>Lead-acid or Li-ion battery packs (18650 cells)&lt;/li>
&lt;li>DC brushed or BLDC in-wheel motors (24V–48V, 250–500 W)&lt;/li>
&lt;/ul>
&lt;h2 id="gallery">Gallery&lt;/h2>
&lt;div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); gap: 10px;">
&lt;img src="images/1.png" alt="Full Assembly">
&lt;img src="images/2.png" alt=" ">
&lt;img src="images/3.png" alt=" ">
&lt;img src="images/4.png" alt=" ">
&lt;/div></description></item><item><title>Gripper Design for Tomato Harvesting</title><link>https://jmvargascruz.github.io/projects/gripper-design/</link><pubDate>Mon, 01 Jan 2024 00:00:00 +0000</pubDate><guid>https://jmvargascruz.github.io/projects/gripper-design/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>This project was part of an international university challenge focused on autonomous tomato harvesting, conducted in collaboration with Mondragon Unibertsitatea and Tecnológico de Monterrey. The main contribution involved designing and building a functional gripper prototype for the robotic system.&lt;/p>
&lt;p>The end-effector was developed using 3D-printed components and included an integrated stepper motor, limit switch, and potentiometer. The control system was implemented on an Arduino UNO, which managed the opening and closing of the gripper based on sensor inputs.&lt;/p></description></item><item><title>Interactive Laser Harp</title><link>https://jmvargascruz.github.io/projects/music-laser-harp/</link><pubDate>Mon, 01 Jan 2024 00:00:00 +0000</pubDate><guid>https://jmvargascruz.github.io/projects/music-laser-harp/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>This project consists of a laser harp, an interactive musical instrument that generates sound when a user interrupts visible laser beams with their hand. Each laser beam corresponds to a musical note. When the beam is blocked, the system detects the change and activates a tone through a built-in speaker.&lt;/p>
&lt;p>The device is built on a curved wooden and plastic frame with multiple red laser diodes aligned with photodetectors (photodiodes). An Arduino microcontroller continuously reads each sensor and triggers a specific tone based on which beam was interrupted. A rotary selector allows the user to switch between rhythm or tone modes.&lt;/p></description></item><item><title>Low-Level Control System | KUKA iDo Robot</title><link>https://jmvargascruz.github.io/projects/low-level-control/</link><pubDate>Mon, 01 Jan 2024 00:00:00 +0000</pubDate><guid>https://jmvargascruz.github.io/projects/low-level-control/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>This project corresponds to the development of the low-level control system for the KUKA iDo robot. The system is based on a custom PCB and embedded firmware running on a Raspberry Pi Pico W. It is responsible for real-time motor control, sensor acquisition, and communication with the high-level ROS 2 system via micro-ROS.&lt;/p>
&lt;p>The firmware was developed in C++ using the official Pico SDK. All logic is executed within a centralized class that integrates control loops, sensor processing, and communication tasks.&lt;/p></description></item><item><title>Motor Test Bench | Aerodesign</title><link>https://jmvargascruz.github.io/projects/motor-test-bench/</link><pubDate>Mon, 01 Jan 2024 00:00:00 +0000</pubDate><guid>https://jmvargascruz.github.io/projects/motor-test-bench/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>This setup was built to evaluate thrust generated by electric propulsion systems for aerodesign applications. A brushless motor with a propeller is mounted on a fixed wooden frame, and the thrust is measured using a hanging digital scale.&lt;/p>
&lt;p>The electrical system includes a LiPo battery, ESC, and XT60 connectors. The motor pulls against the hanging scale while spinning at different throttle levels, allowing thrust to be recorded under static conditions.&lt;/p></description></item><item><title>Object Collecting Robot | Simulation and Control with SolidWorks and LabVIEW</title><link>https://jmvargascruz.github.io/projects/object-collecting-robot/</link><pubDate>Mon, 01 Jan 2024 00:00:00 +0000</pubDate><guid>https://jmvargascruz.github.io/projects/object-collecting-robot/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>This project consisted in designing, programming, and simulating a virtual cleaning robot in a LabVIEW environment. The robot was tasked with autonomously navigating a predefined arena, identifying and collecting cans, and returning to the container zone without colliding with obstacles. The simulation included interaction with a 3D model built in SolidWorks, where the robot movements from LabVIEW were reflected in real time.&lt;/p>
&lt;h2 id="system-behavior">System Behavior&lt;/h2>
&lt;ul>
&lt;li>The robot starts at a fixed home position&lt;/li>
&lt;li>It moves one tile at a time in X and/or Y direction (no rotation)&lt;/li>
&lt;li>Obstacles (3) and cans (8) are randomly placed in a 20x20 arena&lt;/li>
&lt;li>When a can is detected from one of its four corners, the turret aligns to a contact angle (45º, 135º, 225º, 315º) to simulate grasping&lt;/li>
&lt;li>The robot dynamically maps obstacles to avoid them&lt;/li>
&lt;li>Once all cans are collected, the robot must return to the container area within 4 minutes&lt;/li>
&lt;/ul>
&lt;h2 id="mathematical-logic">Mathematical Logic&lt;/h2>
&lt;ul>
&lt;li>Robot movement follows coordinate-based logic, not continuous time&lt;/li>
&lt;li>Discrete movement:&lt;br>
[
(x, y)_{t+1} = (x, y)_t + \Delta x, \Delta y \quad \text{where } \Delta x, \Delta y \in {-1, 0, 1}, |\Delta x| + |\Delta y| \leq 1
]&lt;/li>
&lt;li>Turret orientation is selected by conditional quadrant logic&lt;/li>
&lt;li>Basic pathfinding implemented with coordinate validation and memory of visited positions&lt;/li>
&lt;/ul>
&lt;h2 id="tools-and-technologies">Tools and Technologies&lt;/h2>
&lt;ul>
&lt;li>&lt;strong>LabVIEW&lt;/strong>: Main logic engine for control flow, decision-making, and user interface&lt;/li>
&lt;li>&lt;strong>SolidWorks&lt;/strong>: 3D CAD modeling of the robot and simulation environment&lt;/li>
&lt;li>&lt;strong>Real-Time Integration&lt;/strong>: Robot movements and control signals generated in LabVIEW were executed in real time within the SolidWorks simulation.&lt;/li>
&lt;/ul>
&lt;h2 id="achievements">Achievements&lt;/h2>
&lt;ul>
&lt;li>Completed the full simulation successfully in under four minutes&lt;/li>
&lt;li>Demonstrated autonomous behavior with obstacle avoidance and object retrieval&lt;/li>
&lt;li>Complete LabVIEW documentation and state-based control design&lt;/li>
&lt;/ul>
&lt;h2 id="video">Video&lt;/h2>
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
&lt;iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share; fullscreen" loading="eager" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/Qzy49-ygo1U?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" title="YouTube video">&lt;/iframe>
&lt;/div></description></item><item><title>RC Flying Wing | Aerodesign</title><link>https://jmvargascruz.github.io/projects/rc-flying-wing/</link><pubDate>Mon, 01 Jan 2024 00:00:00 +0000</pubDate><guid>https://jmvargascruz.github.io/projects/rc-flying-wing/</guid><description>&lt;h2 id="key-features">Key Features&lt;/h2>
&lt;ul>
&lt;li>Delta-wing flying configuration&lt;/li>
&lt;li>Brushless motor with rear propeller&lt;/li>
&lt;li>Elevon-based control system&lt;/li>
&lt;li>Lightweight foam construction&lt;/li>
&lt;li>RC electronics&lt;/li>
&lt;/ul>
&lt;h2 id="technologies-used">Technologies Used&lt;/h2>
&lt;ul>
&lt;li>SolidWorks for CAD sketches&lt;/li>
&lt;li>Manual fabrication using foam and adhesives&lt;/li>
&lt;li>RC components (transmitter, receiver, ESC, motor, servos)&lt;/li>
&lt;/ul></description></item><item><title>Robociety | Student Group</title><link>https://jmvargascruz.github.io/projects/robociety/</link><pubDate>Mon, 01 Jan 2024 00:00:00 +0000</pubDate><guid>https://jmvargascruz.github.io/projects/robociety/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>Robociety was a student robotics group dedicated to the design and development of small robots for competitions. The team focused on mini-sumo, micro-sumo, and maze-solving categories.
As cofounder, I contributed to the group’s on embedded control, mechanical design, and printed circuit boards.&lt;/p>
&lt;h2 id="my-role">My Role&lt;/h2>
&lt;ul>
&lt;li>Cofounde&lt;/li>
&lt;li>Development of PCB layouts&lt;/li>
&lt;li>Mechanical design of compact robot frames and gear systems&lt;/li>
&lt;li>Firmware development&lt;/li>
&lt;/ul>
&lt;h2 id="technologies-used">Technologies Used&lt;/h2>
&lt;ul>
&lt;li>SolidWorks for CAD and assembly&lt;/li>
&lt;li>KiCAD for PCB design&lt;/li>
&lt;li>Arduino (C/C++) for embedded control logic&lt;/li>
&lt;li>Infrared and ultrasonic sensors for detection&lt;/li>
&lt;li>Brushed DC motors with gear reductions&lt;/li>
&lt;/ul>
&lt;h2 id="gallery">Gallery&lt;/h2>
&lt;div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); gap: 10px;">
&lt;img src="images/1.jpg" alt="1">
&lt;img src="images/2.jpg" alt="1">
&lt;img src="images/4.jpg" alt="1">
&lt;img src="images/5.jpg" alt="1">
&lt;img src="images/6.png" alt="1">
&lt;img src="images/7.png" alt="1">
&lt;img src="images/8.jpg" alt="1">
&lt;img src="images/9.jpg" alt="1">
&lt;img src="images/10.jpg" alt="1">
&lt;img src="images/11.jpg" alt="1">
&lt;img src="images/12.jpg" alt="1">
&lt;img src="images/13.jpg" alt="1">
&lt;img src="images/14.jpg" alt="1">
&lt;/div></description></item><item><title>Self-Targeting Laser Turret</title><link>https://jmvargascruz.github.io/projects/laser-turret/</link><pubDate>Mon, 01 Jan 2024 00:00:00 +0000</pubDate><guid>https://jmvargascruz.github.io/projects/laser-turret/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>This project involved designing and implementing a two-axis laser turret capable of tracking a moving red circular target in real-time. The system integrates a webcam, MATLAB for image processing, and an Arduino for PID-based actuation. The goal was to keep a laser pointer aimed at the target within a 1 m × 1 m workspace for at least 20 continuous seconds.&lt;/p>
&lt;h2 id="system-description">System Description&lt;/h2>
&lt;p>The vision subsystem detects the position of a red object using color segmentation in MATLAB. This position is sent to the Arduino through serial communication. The Arduino processes the coordinates and drives two DC motors via a manually tuned PID controller to align the turret accordingly.&lt;/p></description></item><item><title>Sensor Module | USB HID Interface</title><link>https://jmvargascruz.github.io/projects/sensor-module/</link><pubDate>Mon, 01 Jan 2024 00:00:00 +0000</pubDate><guid>https://jmvargascruz.github.io/projects/sensor-module/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>This module connects sensors from a driving simulator using RJ45 Keystone jacks and custom wiring. It includes signals such as blinkers, gear selector, handbrake, seatbelt, and ignition. Each sensor is mapped to a virtual joystick button through a USB HID interface.&lt;/p>
&lt;p>The firmware handles input logic and emulates a USB joystick using the Joystick.h library. The module is housed in a 3D-printed case and has a custom PCB prepared for future versions.&lt;/p></description></item><item><title>TEUS 2023 | SAE Aerodesign México</title><link>https://jmvargascruz.github.io/projects/teus-aerodesign/</link><pubDate>Mon, 01 Jan 2024 00:00:00 +0000</pubDate><guid>https://jmvargascruz.github.io/projects/teus-aerodesign/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>&lt;strong>TEUS 2023&lt;/strong> was the aircraft designed and developed for participation in the &lt;strong>SAE Aerodesign México&lt;/strong> national competition. The objective of the contest was to construct a remote-controlled aircraft capable of lifting a maximum payload under cargo dimensional and power consumption constraints.&lt;/p>
&lt;h2 id="contributions">Contributions&lt;/h2>
&lt;ul>
&lt;li>Designed the wing profile and internal structural frame using &lt;strong>SolidWorks&lt;/strong>.&lt;/li>
&lt;li>Constructed and assembled the fuselage and propulsion elements.&lt;/li>
&lt;li>Performed motor–propeller characterization using a custom-built test bench.&lt;/li>
&lt;li>Participated in telemetry setup, weight distribution analysis, and test flights.&lt;/li>
&lt;li>Competed in the official SAE Aerodesign México 2023.&lt;/li>
&lt;/ul>
&lt;h2 id="technologies-used">Technologies Used&lt;/h2>
&lt;ul>
&lt;li>SolidWorks for mechanical design&lt;/li>
&lt;/ul>
&lt;h2 id="gallery">Gallery&lt;/h2>
&lt;div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 10px;">
&lt;img src="images/2.jpeg" alt="2">
&lt;img src="images/3.jpg" alt="3">
&lt;img src="images/4.JPEG" alt="4">
&lt;/div></description></item><item><title>Upright CNC Router | MATLAB Simulation</title><link>https://jmvargascruz.github.io/projects/upright-cnc/</link><pubDate>Mon, 01 Jan 2024 00:00:00 +0000</pubDate><guid>https://jmvargascruz.github.io/projects/upright-cnc/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>This project consisted of modeling and simulating a vertical CNC router using MATLAB. The system was designed to demonstrate position control over two perpendicular linear axes (X and Y), mimicking the behavior of a basic CNC machine.&lt;/p>
&lt;p>The model includes actuator dynamics, position feedback, and trajectory generation, with the control logic implemented in discrete time using PID controllers.&lt;/p>
&lt;h2 id="key-features">Key Features&lt;/h2>
&lt;ul>
&lt;li>2-axis CNC system simulation&lt;/li>
&lt;li>Upright router configuration modeled in 3D CAD&lt;/li>
&lt;li>Discrete PID control implemented in MATLAB&lt;/li>
&lt;li>Visualization of tool motion and path tracking&lt;/li>
&lt;li>Position reference generation for square and circular trajectories&lt;/li>
&lt;/ul>
&lt;h2 id="technologies-used">Technologies Used&lt;/h2>
&lt;ul>
&lt;li>MATLAB and Simulink&lt;/li>
&lt;li>Control System Toolbox&lt;/li>
&lt;li>SolidWorks for mechanical modeling&lt;/li>
&lt;/ul>
&lt;h2 id="gallery">Gallery&lt;/h2>
&lt;div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(350px, 1fr)); gap: 10px;">
&lt;img src="images/0.png" alt=" ">
&lt;img src="images/2.png" alt=" ">
&lt;/div>
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
&lt;iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share; fullscreen" loading="eager" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/pjHPmVw_3UI?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" title="YouTube video">&lt;/iframe>
&lt;/div></description></item><item><title>Water Consumption Monitoring System | LOGO! Siemens</title><link>https://jmvargascruz.github.io/projects/water-consumption/</link><pubDate>Mon, 01 Jan 2024 00:00:00 +0000</pubDate><guid>https://jmvargascruz.github.io/projects/water-consumption/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>This project consists of a programmable control system designed to monitor household water consumption using a Siemens LOGO! PLC. The system receives flow measurements from a water flow sensor and tracks total consumption over time, displaying data through a user interface panel.&lt;/p>
&lt;p>The objective was to automate water usage tracking in domestic installations and evaluate how programmable logic controllers can be used for energy efficiency and sustainability applications.&lt;/p>
&lt;h2 id="key-features">Key Features&lt;/h2>
&lt;ul>
&lt;li>Real-time flow measurement using a digital flow sensor&lt;/li>
&lt;li>Accumulated water consumption display on HMI screen&lt;/li>
&lt;li>Alarm activation if consumption exceeds threshold&lt;/li>
&lt;li>Integration of LOGO! Soft Comfort for ladder logic programming&lt;/li>
&lt;li>230V-compatible input/output wiring for solenoid valve control&lt;/li>
&lt;/ul>
&lt;h2 id="technologies-used">Technologies Used&lt;/h2>
&lt;ul>
&lt;li>Siemens LOGO! 12/24RCE&lt;/li>
&lt;li>LOGO! Soft Comfort (v8)&lt;/li>
&lt;li>Hall-effect water flow sensor&lt;/li>
&lt;li>Relay actuators and solenoid valves&lt;/li>
&lt;li>Ladder Logic Programming&lt;/li>
&lt;li>Low-voltage AC wiring and safety relays&lt;/li>
&lt;/ul>
&lt;h2 id="gallery">Gallery&lt;/h2>
&lt;div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 10px;">
&lt;img src="images/0.jpg" alt="Overview of the LOGO! PLC setup">
&lt;img src="images/1.jpg" alt="Internal wiring and I/O configuration">
&lt;img src="images/2.jpg" alt="Ladder logic program in LOGO! Soft Comfort">
&lt;img src="images/3.jpg" alt="Installed system with water flow sensor">
&lt;img src="images/4.jpg" alt="HMI interface for consumption visualization">
&lt;img src="images/5.jpg" alt="System testing in residential setup">
&lt;/div></description></item></channel></rss>