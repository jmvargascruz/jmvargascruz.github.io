<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Control on Jesús Vargas Portfolio</title><link>https://jmvargascruz.github.io/tags/control/</link><description>Recent content in Control on Jesús Vargas Portfolio</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Mon, 01 Jan 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://jmvargascruz.github.io/tags/control/index.xml" rel="self" type="application/rss+xml"/><item><title>Object Collecting Robot | Simulation and Control with SolidWorks and LabVIEW</title><link>https://jmvargascruz.github.io/projects/object-collecting-robot/</link><pubDate>Mon, 01 Jan 2024 00:00:00 +0000</pubDate><guid>https://jmvargascruz.github.io/projects/object-collecting-robot/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>This project consisted in designing, programming, and simulating a virtual cleaning robot in a LabVIEW environment. The robot was tasked with autonomously navigating a predefined arena, identifying and collecting cans, and returning to the container zone without colliding with obstacles. The simulation included interaction with a 3D model built in SolidWorks, where the robot movements from LabVIEW were reflected in real time.&lt;/p>
&lt;h2 id="system-behavior">System Behavior&lt;/h2>
&lt;ul>
&lt;li>The robot starts at a fixed home position&lt;/li>
&lt;li>It moves one tile at a time in X and/or Y direction (no rotation)&lt;/li>
&lt;li>Obstacles (3) and cans (8) are randomly placed in a 20x20 arena&lt;/li>
&lt;li>When a can is detected from one of its four corners, the turret aligns to a contact angle (45º, 135º, 225º, 315º) to simulate grasping&lt;/li>
&lt;li>The robot dynamically maps obstacles to avoid them&lt;/li>
&lt;li>Once all cans are collected, the robot must return to the container area within 4 minutes&lt;/li>
&lt;/ul>
&lt;h2 id="mathematical-logic">Mathematical Logic&lt;/h2>
&lt;ul>
&lt;li>Robot movement follows coordinate-based logic, not continuous time&lt;/li>
&lt;li>Discrete movement:&lt;br>
[
(x, y)_{t+1} = (x, y)_t + \Delta x, \Delta y \quad \text{where } \Delta x, \Delta y \in {-1, 0, 1}, |\Delta x| + |\Delta y| \leq 1
]&lt;/li>
&lt;li>Turret orientation is selected by conditional quadrant logic&lt;/li>
&lt;li>Basic pathfinding implemented with coordinate validation and memory of visited positions&lt;/li>
&lt;/ul>
&lt;h2 id="tools-and-technologies">Tools and Technologies&lt;/h2>
&lt;ul>
&lt;li>&lt;strong>LabVIEW&lt;/strong>: Main logic engine for control flow, decision-making, and user interface&lt;/li>
&lt;li>&lt;strong>SolidWorks&lt;/strong>: 3D CAD modeling of the robot and simulation environment&lt;/li>
&lt;li>&lt;strong>Real-Time Integration&lt;/strong>: Robot movements and control signals generated in LabVIEW were executed in real time within the SolidWorks simulation.&lt;/li>
&lt;/ul>
&lt;h2 id="achievements">Achievements&lt;/h2>
&lt;ul>
&lt;li>Completed the full simulation successfully in under four minutes&lt;/li>
&lt;li>Demonstrated autonomous behavior with obstacle avoidance and object retrieval&lt;/li>
&lt;li>Complete LabVIEW documentation and state-based control design&lt;/li>
&lt;/ul>
&lt;h2 id="video">Video&lt;/h2>
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
&lt;iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share; fullscreen" loading="eager" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/Qzy49-ygo1U?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" title="YouTube video">&lt;/iframe>
&lt;/div></description></item><item><title>Upright CNC Router | MATLAB Simulation</title><link>https://jmvargascruz.github.io/projects/upright-cnc/</link><pubDate>Mon, 01 Jan 2024 00:00:00 +0000</pubDate><guid>https://jmvargascruz.github.io/projects/upright-cnc/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>This project consisted of modeling and simulating a vertical CNC router using MATLAB. The system was designed to demonstrate position control over two perpendicular linear axes (X and Y), mimicking the behavior of a basic CNC machine.&lt;/p>
&lt;p>The model includes actuator dynamics, position feedback, and trajectory generation, with the control logic implemented in discrete time using PID controllers.&lt;/p>
&lt;h2 id="key-features">Key Features&lt;/h2>
&lt;ul>
&lt;li>2-axis CNC system simulation&lt;/li>
&lt;li>Upright router configuration modeled in 3D CAD&lt;/li>
&lt;li>Discrete PID control implemented in MATLAB&lt;/li>
&lt;li>Visualization of tool motion and path tracking&lt;/li>
&lt;li>Position reference generation for square and circular trajectories&lt;/li>
&lt;/ul>
&lt;h2 id="technologies-used">Technologies Used&lt;/h2>
&lt;ul>
&lt;li>MATLAB and Simulink&lt;/li>
&lt;li>Control System Toolbox&lt;/li>
&lt;li>SolidWorks for mechanical modeling&lt;/li>
&lt;/ul>
&lt;h2 id="gallery">Gallery&lt;/h2>
&lt;div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(350px, 1fr)); gap: 10px;">
&lt;img src="images/0.png" alt=" ">
&lt;img src="images/2.png" alt=" ">
&lt;/div>
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
&lt;iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share; fullscreen" loading="eager" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/pjHPmVw_3UI?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" title="YouTube video">&lt;/iframe>
&lt;/div></description></item></channel></rss>